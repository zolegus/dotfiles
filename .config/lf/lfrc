set hidden false
set icons
set preview
set previewer "~/.config/lf/previewer.sh"
set promptfmt "\033[34;1m%d\033[0m\033[1m%f\033[0m"
set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10

map <enter> open
map <c-space> :set info size; calcdirsize

########################## execute current file (must be executable)
map x $$f
map X !$f

########################### define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

######################### define a custom 'delete' command
cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "recursive delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}
cmd trash %set -f; mv $fx ~/.Trash
map DD delete
map DT trash

##################### create new file and directory ################
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}
map A mkdir
cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}
map a mkfile

##################### fzf integration ###################
map <c-f> :fzf_jump
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf-tmux -p --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map f $vi $(fzf)

##### ripgrep integration ##################################
cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}
map gf :fzf_search

##### zoxide integration ################################
cmd z %{{
	result="$(zoxide query --exclude $PWD $@)"
	lf -remote "send $id cd $result"
}}
cmd zi ${{
	result="$(zoxide query -i)"
	lf -remote "send $id cd $result"
}}

##### git integration ####################################
cmd git_branch ${{
    git branch | fzf-tmux -p --reverse | xargs git checkout
    pwd_shell=$(pwd)
    lf -remote "send $id updir"
    lf -remote "send $id cd \"$pwd_shell\""
}}

map gb :git_branch
map gp ${{clear; git pull --rebase || true; echo "press ENTER"; read ENTER}}
map gs ${{clear; git status; echo "press ENTER"; read ENTER}}
map gl ${{clear; git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit}}

