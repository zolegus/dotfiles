# https://fishshell.com/docs/current/cmds/abbr.html
abbr :GoToCommand "nvim +GoToCommand"
abbr :GoToFile "nvim +GoToFile"
abbr :Grep "nvim +Grep"
abbr c clear
abbr cb "cargo build"
abbr cbr "cargo build --release"
abbr claer clear
abbr clera clear
abbr clean kondo
abbr cdoc "cargo doc --open"
abbr ci "cargo install"
abbr cif "cargo info"
abbr cl "cargo install --list"
abbr cf "cargo fix"
abbr cn "cargo new"
abbr cnn "cargo new --vcs=none"
abbr cr "cargo run"
abbr crr "cargo run --release"
abbr crs "RUST_BACKTRACE=1 cargo run"
abbr crrs "RUST_BACKTRACE=1 cargo run --release"
abbr cs "cargo search"
abbr cup "cargo install-update -l"
abbr ct "cargo test"
abbr cx "chmod +x"
abbr dc "docker compose"
abbr dcd "docker compose down"
abbr dcdv "docker compose down -v"
abbr dcr "docker compose restart"
abbr dcu "docker compose up -d"
abbr df "df -H"
abbr dps "docker ps --format 'table {{.Names}}\t{{.Status}}'"
abbr e exit
abbr gg "gping google.com"
abbr g "git status"
#abbr ga "git add ."
#abbr gb "git branch -v"
#abbr gc "git commit"
#abbr gca "git commit -av"
abbr gcl "git clone"
#abbr gco "git checkout -b"
#abbr gcom "~/bin/git-to-master-cleanup-branch.sh"
#abbr gd "nvim +DiffviewOpen"
#abbr gf "git fetch --all"
#abbr gl "git pull"
#abbr gma "git merge --abort"
#abbr gmc "git merge --continue"
#abbr gp "git push"
#abbr gpom "git pull origin main"
#abbr gpr "gh pr create"
#abbr gpum "git pull upstream master"
#abbr gr "git remote"
abbr gru "git config --get remote.origin.url"
#abbr gra "git remote add"
#abbr grao "git remote add origin"
#abbr grau "git remote add upstream"
#abbr grv "git remote -v"
abbr hd "history delete --exact --case-sensitive \'(history | fzf-tmux -p -m)\'"
abbr j "joshuto"
#abbr kn "killall node"
abbr l "lsd  --group-dirs first -A"
#abbr ld lazydocker
abbr lg lazygit
#abbr ll "lsd  --group-dirs first -Al"
abbr ll "exa -l -g --icons"
abbr lld "exa -l -g -s=date --icons"
abbr llz "exa -l -g -s=size --icons"
abbr lla "exa -l -a -g --icons"
abbr llad "exa -l -a -g -s=date --icons"
abbr llaz "exa -l -a -g -s=size --icons"
abbr lt "lsd  --group-dirs last -A --tree"
abbr mans "tldr --list | fzf --header 'tldr (tealdeer)' --reverse --preview 'tldr {1} --color=always' --preview-window=right,80% | xargs tldr"
abbr nf neofetch
abbr ni "npm install"
abbr pfzf "fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'"
abbr repos-build "find . -name Cargo.toml -execdir cargo build \;"
abbr repos-list-find "find . -name .git -type d"
abbr repos-list "fd -t d -d 2 -H --no-ignore-vcs .git"
abbr repos-remove "find . -type d -name .git -print -exec rm -rf {} +"
abbr repos-update "find . -maxdepth 1 -type d -print | parallel --eta 'echo {} && git -C {} pull'"
abbr rmr "rm -rf"
abbr sf "source ~/.config/fish/config.fish"
abbr sfa "source ~/.config/fish/conf.d/abbr.fish"
abbr sleepnow "pmset sleepnow"
# abbr st "tmux source ~/.config/tmux/tmux.conf"
# abbr t "tmux"
# abbr ta "tmux a"
# abbr tat "tmux attach -t"
# abbr tk "tmux kill-server"
# abbr tl "tmux list-sessions"
# abbr tn "tmux new -s (basename (pwd))"
abbr trashclear "rm -rf ~/.local/share/Trash/*"
abbr unset "set --erase"
abbr vfzf "nvim (fd --type f --hidden --follow --exclude .git | fzf-tmux -p -w 100 --reverse --preview 'bat --color=always --style=numbers --line-range=:500 {}')"
abbr va "nvim ~/.config/alacritty/alacritty.yml"
abbr vf "nvim ~/.config/fish/config.fish"
abbr vfa "nvim ~/.config/fish/conf.d/abbr.fish"
abbr vlf "nvim ~/.config/lf/lfrc"
# abbr vt "nvim ~/.config/tmux/tmux.conf"
abbr vp "nvim package.json"
abbr y yy
abbr ytd "blob-dl"
abbr zr "zoxide remove (pwd)"
